/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type LocalizedUrl = {
  _type: 'localizedUrl'
  fr: string
  en: string
}

export type Product = {
  _id: string
  _type: 'product'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: LocalizedString
  slug: Slug
  modules: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'module.textBlock'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'module.textImageBlock'
      }
  >
}

export type Article = {
  _id: string
  _type: 'article'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: LocalizedString
  slug: Slug
  summary: LocalizedText
  modules: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'module.textBlock'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
        [internalGroqTypeReferenceTo]?: 'module.textImageBlock'
      }
  >
}

export type Slug = {
  _type: 'slug'
  current: string
  source?: string
}

export type ModuleTextImageBlock = {
  _id: string
  _type: 'module.textImageBlock'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: LocalizedString
  subTitle?: LocalizedString
  body: LocalizedText
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type ModuleTextBlock = {
  _id: string
  _type: 'module.textBlock'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: LocalizedString
  body: LocalizedText
}

export type LocalizedText = {
  _type: 'localizedText'
  fr: string
  en: string
}

export type LocalizedString = {
  _type: 'localizedString'
  fr: string
  en: string
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | LocalizedUrl
  | Product
  | Article
  | Slug
  | ModuleTextImageBlock
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | ModuleTextBlock
  | LocalizedText
  | LocalizedString
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./groq/article.queries.ts
// Variable: SanityBlogArticleQuery
// Query: *[_type == 'article' && slug.current == $slug][0] {  _id,  "publicationDate": _createdAt,  "title": select(  $lang == "en" => title.en,  $lang == "fr" => title.fr,),  "slug": slug.current,  "summary": select(  $lang == "en" => summary.en,  $lang == "fr" => summary.fr,),  modules[] {    _type == 'module.textBlock' => {        _key,        _type,        "subTitle": select(  $lang == "en" => subTitle.en,  $lang == "fr" => subTitle.fr,),        "title": select(  $lang == "en" => title.en,  $lang == "fr" => title.fr,),        "body": select(  $lang == "en" => body.en,  $lang == "fr" => body.fr,),        image    },    _type == 'module.textImageBlock' => {        _key,        _type,        "title": select(  $lang == "en" => title.en,  $lang == "fr" => title.fr,),        "body": select(  $lang == "en" => body.en,  $lang == "fr" => body.fr,),    }  }}
export type SanityBlogArticleQueryResult = {
  _id: string
  publicationDate: string
  title: string
  slug: string
  summary: string
  modules: Array<{}>
} | null
// Source: ./groq/product.queries.ts
// Variable: SanityProductModulesQuery
// Query: *[_type == 'product' && slug.current == $slug][0] {    "title": select(  $lang == "en" => title.en,  $lang == "fr" => title.fr,),    "slug": slug.current,    modules[] -> {        _type == 'module.textBlock' => {            _type,            "_key": ^._key,            "title": select(  $lang == "en" => title.en,  $lang == "fr" => title.fr,),            "body": select(  $lang == "en" => body.en,  $lang == "fr" => body.fr,),        },        _type == 'module.textImageBlock' => {            _type,            "_key": ^._key,            "subTitle": select(  $lang == "en" => subTitle.en,  $lang == "fr" => subTitle.fr,),            "title": select(  $lang == "en" => title.en,  $lang == "fr" => title.fr,),            "body": select(  $lang == "en" => body.en,  $lang == "fr" => body.fr,),            image        },    }}
export type SanityProductModulesQueryResult = {
  title: string
  slug: string
  modules: Array<
    | {
        _type: 'module.textBlock'
        _key: null
        title: string
        body: string
      }
    | {
        _type: 'module.textImageBlock'
        _key: null
        subTitle: string | null
        title: string
        body: string
        image: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
        }
      }
  >
} | null
